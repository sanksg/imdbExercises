Loading IMDB dataset...
Original dataframe shape:  (100000, 4)
Original DF columns: Index(['type', 'review', 'label', 'file'], dtype='object')
Original Train/Test split: train    75000
test     25000
Name: type, dtype: int64
Dropping the file column...
Dropping the unlabeled rows and splitting into train/test...
X_train, y_train, shapes: (25000,) (25000,)
y_train counts: pos    12500
neg    12500
Name: label, dtype: int64
X_test, y_test, shapes: (25000,) (25000,)
y_test counts: pos    12500
neg    12500
Name: label, dtype: int64
Fitting 3 folds for each of 64 candidates, totalling 192 fits

Best parameters set found on development set:

{'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}

Grid scores on development set:

0.888 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.888 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.887 (+/-0.006) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.886 (+/-0.002) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.886 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.885 (+/-0.000) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.885 (+/-0.005) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.884 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.884 (+/-0.002) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.884 (+/-0.005) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.883 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.882 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': None}
0.882 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.882 (+/-0.002) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.882 (+/-0.001) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.880 (+/-0.002) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': None}
0.878 (+/-0.006) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.878 (+/-0.005) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.878 (+/-0.005) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.877 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.877 (+/-0.005) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.877 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.877 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.876 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.876 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.875 (+/-0.003) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.874 (+/-0.003) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.874 (+/-0.003) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.874 (+/-0.003) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.874 (+/-0.004) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 3), 'tfidfVect__stop_words': True}
0.873 (+/-0.001) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.873 (+/-0.003) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 5), 'tfidfVect__stop_words': True}
0.865 (+/-0.009) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.864 (+/-0.006) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.863 (+/-0.009) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.863 (+/-0.008) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.863 (+/-0.005) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.863 (+/-0.008) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.862 (+/-0.006) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.862 (+/-0.007) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.862 (+/-0.005) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.862 (+/-0.006) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.861 (+/-0.006) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.861 (+/-0.008) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.861 (+/-0.007) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': True}
0.860 (+/-0.010) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.860 (+/-0.006) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.859 (+/-0.006) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (1, 1), 'tfidfVect__stop_words': None}
0.843 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.843 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.843 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.843 (+/-0.004) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.843 (+/-0.005) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.842 (+/-0.005) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.4, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.842 (+/-0.005) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.6, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.842 (+/-0.005) for {'tfidfVect__binary': False, 'tfidfVect__max_df': 0.8, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': None}
0.729 (+/-0.002) for {'tfidfVect__binary': True, 'tfidfVect__max_df': 0.2, 'tfidfVect__ngram_range': (3, 5), 'tfidfVect__stop_words': True}